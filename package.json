{
    "name": "node-fetch",
    "version": "2.6.0",
    "description": "A light-weight module that brings window.fetch to node.js",
    "main": "dist/index.js",
    "module": "dist/index.mjs",
    "types": "types/index.d.ts",
    "files": [
        "src/**/*",
        "dist/**/*",
        "types/**/*.d.ts"
    ],
    "engines": {
        "node": ">=10.0.0"
    },
    "scripts": {
        "build": "pika-pack --out dist/",
        "prepare": "npm run build",
        "test": "cross-env BABEL_ENV=test mocha --require @babel/register --throw-deprecation test/test.js",
        "report": "cross-env BABEL_ENV=coverage nyc --reporter lcov --reporter text mocha -R spec test/test.js",
        "coverage": "cross-env BABEL_ENV=coverage nyc --reporter json --reporter text mocha -R spec test/test.js && codecov -f coverage/coverage-final.json",
        "lint": "xo"
    },
    "repository": {
        "type": "git",
        "url": "https://github.com/node-fetch/node-fetch.git"
    },
    "keywords": [
        "fetch",
        "http",
        "promise"
    ],
    "author": "David Frank",
    "license": "MIT",
    "bugs": {
        "url": "https://github.com/node-fetch/node-fetch/issues"
    },
    "homepage": "https://github.com/node-fetch/node-fetch",
    "funding": {
        "type": "opencollective",
        "url": "https://opencollective.com/node-fetch"
    },
    "devDependencies": {
        "@babel/core": "^7.8.7",
        "@babel/preset-env": "^7.8.7",
        "@babel/register": "^7.8.6",
        "@pika/pack": "^0.5.0",
        "@pika/plugin-build-node": "^0.9.2",
        "@pika/plugin-build-types": "^0.9.2",
        "@pika/plugin-copy-assets": "^0.9.2",
        "@pika/plugin-standard-pkg": "^0.9.2",
        "abort-controller": "^3.0.0",
        "abortcontroller-polyfill": "^1.4.0",
        "chai": "^4.2.0",
        "chai-as-promised": "^7.1.1",
        "chai-iterator": "^3.0.2",
        "chai-string": "^1.5.0",
        "codecov": "^3.6.5",
        "cross-env": "^7.0.2",
        "form-data": "^3.0.0",
        "mocha": "^7.1.0",
        "nyc": "^15.0.0",
        "parted": "^0.1.1",
        "promise": "^8.1.0",
        "resumer": "0.0.0",
        "string-to-arraybuffer": "^1.0.2",
        "xo": "^0.28.0"
    },
    "dependencies": {
        "data-uri-to-buffer": "^3.0.0",
        "fetch-blob": "^1.0.5",
        "utf8": "^3.0.0"
    },
    "@pika/pack": {
        "pipeline": [
            [
                "@pika/plugin-standard-pkg"
            ],
            [
                "@pika/plugin-build-node"
            ],
            [
                "@pika/plugin-build-types"
            ],
            [
                "@pika/plugin-copy-assets",
                {
                    "files": [
                        "externals.d.ts"
                    ]
                }
            ]
        ]
    },
    "xo": {
        "envs": [
            "node",
            "browser"
        ],
        "rules": {
            "valid-jsdoc": 0,
            "no-multi-assign": 0,
            "complexity": 0,
            "unicorn/prefer-spread": 0,
            "promise/prefer-await-to-then": 0,
            "no-mixed-operators": 0,
            "eqeqeq": 0,
            "no-eq-null": 0,
            "no-negated-condition": 0,
            "prefer-named-capture-group": 0,
            "unicorn/catch-error-name": 0,
            "node/no-deprecated-api": 1
        },
        "ignores": [
            "dist"
        ],
        "overrides": [
            {
                "files": "test/**/*.js",
                "envs": [
                    "node",
                    "mocha"
                ],
                "rules": {
                    "max-nested-callbacks": 0,
                    "no-unused-expressions": 0,
                    "eslint-comments/no-unused-disable": 0,
                    "new-cap": 0,
                    "guard-for-in": 0,
                    "no-new": 0
                }
            },
            {
                "files": "example.js",
                "rules": {
                    "import/no-extraneous-dependencies": 0
                }
            }
        ]
    },
    "babel": {
        "presets": [
            [
                "@babel/preset-env",
                {
                    "targets": {
                        "node": true
                    }
                }
            ]
        ]
    },
    "nyc": {
        "require": [
            "@babel/register"
        ],
        "sourceMap": false,
        "instrument": false
    },
    "runkitExampleFilename": "example.js"
}